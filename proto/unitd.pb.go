// Code generated by protoc-gen-go. DO NOT EDIT.
// source: unitd.proto

package unitd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type ConnInfo struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnInfo) Reset()         { *m = ConnInfo{} }
func (m *ConnInfo) String() string { return proto.CompactTextString(m) }
func (*ConnInfo) ProtoMessage()    {}
func (*ConnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{1}
}

func (m *ConnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnInfo.Unmarshal(m, b)
}
func (m *ConnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnInfo.Marshal(b, m, deterministic)
}
func (m *ConnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnInfo.Merge(m, src)
}
func (m *ConnInfo) XXX_Size() int {
	return xxx_messageInfo_ConnInfo.Size(m)
}
func (m *ConnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnInfo proto.InternalMessageInfo

func (m *ConnInfo) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

type InMsg struct {
	// Types that are valid to be assigned to Message:
	//	*InMsg_Info
	//	*InMsg_Entry
	//	*InMsg_Query
	//	*InMsg_Sub
	//	*InMsg_Pub
	Message              isInMsg_Message `protobuf_oneof:"Message"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InMsg) Reset()         { *m = InMsg{} }
func (m *InMsg) String() string { return proto.CompactTextString(m) }
func (*InMsg) ProtoMessage()    {}
func (*InMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{2}
}

func (m *InMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InMsg.Unmarshal(m, b)
}
func (m *InMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InMsg.Marshal(b, m, deterministic)
}
func (m *InMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InMsg.Merge(m, src)
}
func (m *InMsg) XXX_Size() int {
	return xxx_messageInfo_InMsg.Size(m)
}
func (m *InMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_InMsg.DiscardUnknown(m)
}

var xxx_messageInfo_InMsg proto.InternalMessageInfo

type isInMsg_Message interface {
	isInMsg_Message()
}

type InMsg_Info struct {
	Info *ConnInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type InMsg_Entry struct {
	Entry *Entry `protobuf:"bytes,2,opt,name=entry,proto3,oneof"`
}

type InMsg_Query struct {
	Query *Query `protobuf:"bytes,3,opt,name=query,proto3,oneof"`
}

type InMsg_Sub struct {
	Sub *Sub `protobuf:"bytes,4,opt,name=sub,proto3,oneof"`
}

type InMsg_Pub struct {
	Pub *Pub `protobuf:"bytes,5,opt,name=pub,proto3,oneof"`
}

func (*InMsg_Info) isInMsg_Message() {}

func (*InMsg_Entry) isInMsg_Message() {}

func (*InMsg_Query) isInMsg_Message() {}

func (*InMsg_Sub) isInMsg_Message() {}

func (*InMsg_Pub) isInMsg_Message() {}

func (m *InMsg) GetMessage() isInMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *InMsg) GetInfo() *ConnInfo {
	if x, ok := m.GetMessage().(*InMsg_Info); ok {
		return x.Info
	}
	return nil
}

func (m *InMsg) GetEntry() *Entry {
	if x, ok := m.GetMessage().(*InMsg_Entry); ok {
		return x.Entry
	}
	return nil
}

func (m *InMsg) GetQuery() *Query {
	if x, ok := m.GetMessage().(*InMsg_Query); ok {
		return x.Query
	}
	return nil
}

func (m *InMsg) GetSub() *Sub {
	if x, ok := m.GetMessage().(*InMsg_Sub); ok {
		return x.Sub
	}
	return nil
}

func (m *InMsg) GetPub() *Pub {
	if x, ok := m.GetMessage().(*InMsg_Pub); ok {
		return x.Pub
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InMsg_Info)(nil),
		(*InMsg_Entry)(nil),
		(*InMsg_Query)(nil),
		(*InMsg_Sub)(nil),
		(*InMsg_Pub)(nil),
	}
}

type OutMsg struct {
	// Types that are valid to be assigned to Message:
	//	*OutMsg_Info
	//	*OutMsg_Data
	Message              isOutMsg_Message `protobuf_oneof:"Message"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OutMsg) Reset()         { *m = OutMsg{} }
func (m *OutMsg) String() string { return proto.CompactTextString(m) }
func (*OutMsg) ProtoMessage()    {}
func (*OutMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{3}
}

func (m *OutMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutMsg.Unmarshal(m, b)
}
func (m *OutMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutMsg.Marshal(b, m, deterministic)
}
func (m *OutMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutMsg.Merge(m, src)
}
func (m *OutMsg) XXX_Size() int {
	return xxx_messageInfo_OutMsg.Size(m)
}
func (m *OutMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_OutMsg.DiscardUnknown(m)
}

var xxx_messageInfo_OutMsg proto.InternalMessageInfo

type isOutMsg_Message interface {
	isOutMsg_Message()
}

type OutMsg_Info struct {
	Info *ConnInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type OutMsg_Data struct {
	Data *Data `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*OutMsg_Info) isOutMsg_Message() {}

func (*OutMsg_Data) isOutMsg_Message() {}

func (m *OutMsg) GetMessage() isOutMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *OutMsg) GetInfo() *ConnInfo {
	if x, ok := m.GetMessage().(*OutMsg_Info); ok {
		return x.Info
	}
	return nil
}

func (m *OutMsg) GetData() *Data {
	if x, ok := m.GetMessage().(*OutMsg_Data); ok {
		return x.Data
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OutMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OutMsg_Info)(nil),
		(*OutMsg_Data)(nil),
	}
}

type Entry struct {
	Topic                []byte   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{4}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Entry) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Query struct {
	Topic                []byte   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{5}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Query) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Sub struct {
	Topic                []byte   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sub) Reset()         { *m = Sub{} }
func (m *Sub) String() string { return proto.CompactTextString(m) }
func (*Sub) ProtoMessage()    {}
func (*Sub) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{6}
}

func (m *Sub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sub.Unmarshal(m, b)
}
func (m *Sub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sub.Marshal(b, m, deterministic)
}
func (m *Sub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sub.Merge(m, src)
}
func (m *Sub) XXX_Size() int {
	return xxx_messageInfo_Sub.Size(m)
}
func (m *Sub) XXX_DiscardUnknown() {
	xxx_messageInfo_Sub.DiscardUnknown(m)
}

var xxx_messageInfo_Sub proto.InternalMessageInfo

func (m *Sub) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

type Pub struct {
	Topic                []byte   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pub) Reset()         { *m = Pub{} }
func (m *Pub) String() string { return proto.CompactTextString(m) }
func (*Pub) ProtoMessage()    {}
func (*Pub) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{7}
}

func (m *Pub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pub.Unmarshal(m, b)
}
func (m *Pub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pub.Marshal(b, m, deterministic)
}
func (m *Pub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pub.Merge(m, src)
}
func (m *Pub) XXX_Size() int {
	return xxx_messageInfo_Pub.Size(m)
}
func (m *Pub) XXX_DiscardUnknown() {
	xxx_messageInfo_Pub.DiscardUnknown(m)
}

var xxx_messageInfo_Pub proto.InternalMessageInfo

func (m *Pub) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Pub) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type Data struct {
	Topic                []byte   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{8}
}

func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Data) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "unitd.Empty")
	proto.RegisterType((*ConnInfo)(nil), "unitd.ConnInfo")
	proto.RegisterType((*InMsg)(nil), "unitd.InMsg")
	proto.RegisterType((*OutMsg)(nil), "unitd.OutMsg")
	proto.RegisterType((*Entry)(nil), "unitd.Entry")
	proto.RegisterType((*Query)(nil), "unitd.Query")
	proto.RegisterType((*Sub)(nil), "unitd.Sub")
	proto.RegisterType((*Pub)(nil), "unitd.Pub")
	proto.RegisterType((*Data)(nil), "unitd.Data")
}

func init() { proto.RegisterFile("unitd.proto", fileDescriptor_2581e9e1a4f3b0d3) }

var fileDescriptor_2581e9e1a4f3b0d3 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x51, 0x6b, 0xe2, 0x40,
	0x14, 0x85, 0x93, 0x4d, 0xc6, 0xe8, 0x55, 0x58, 0x18, 0x7c, 0x08, 0x0a, 0xcb, 0xee, 0xe0, 0xb2,
	0xc2, 0x82, 0x2c, 0xca, 0xee, 0xbe, 0xdb, 0x0a, 0xfa, 0x20, 0xb5, 0x09, 0x7d, 0x29, 0x94, 0x32,
	0x31, 0x51, 0x02, 0x3a, 0x93, 0x26, 0x77, 0x1e, 0xf2, 0x17, 0xfa, 0xbf, 0xfa, 0xbf, 0xca, 0x4c,
	0x62, 0xa9, 0x52, 0x5b, 0xfa, 0x78, 0xee, 0xf9, 0xce, 0x65, 0xce, 0x70, 0xa1, 0xad, 0x44, 0x8a,
	0xf1, 0x28, 0xcb, 0x25, 0x4a, 0x4a, 0x8c, 0x60, 0x1e, 0x90, 0xd9, 0x3e, 0xc3, 0x92, 0xfd, 0x82,
	0xe6, 0x85, 0x14, 0x62, 0x21, 0x36, 0x92, 0xf6, 0xa1, 0xb5, 0xde, 0xa5, 0x89, 0xc0, 0xfb, 0x34,
	0xf6, 0xed, 0xef, 0xf6, 0xb0, 0x13, 0x34, 0xab, 0xc1, 0x22, 0x66, 0x4f, 0x36, 0x90, 0x85, 0x58,
	0x16, 0x5b, 0xfa, 0x13, 0xdc, 0x54, 0x6c, 0xa4, 0x21, 0xda, 0xe3, 0xaf, 0xa3, 0x6a, 0xfd, 0x61,
	0xcb, 0xdc, 0x0a, 0x8c, 0x4d, 0x07, 0x40, 0x12, 0x81, 0x79, 0xe9, 0x7f, 0x31, 0x5c, 0xa7, 0xe6,
	0x66, 0x7a, 0x36, 0xb7, 0x82, 0xca, 0xd4, 0xd4, 0x83, 0x4a, 0xf2, 0xd2, 0x77, 0x8e, 0xa8, 0x6b,
	0x3d, 0xd3, 0x94, 0x31, 0xe9, 0x37, 0x70, 0x0a, 0x15, 0xf9, 0xae, 0x61, 0xa0, 0x66, 0x42, 0x15,
	0xcd, 0xad, 0x40, 0x1b, 0xda, 0xcf, 0x54, 0xe4, 0x93, 0x23, 0x7f, 0x55, 0xf9, 0x99, 0x8a, 0xa6,
	0x2d, 0xf0, 0x96, 0x49, 0x51, 0xf0, 0x6d, 0xc2, 0xee, 0xa0, 0x71, 0xa5, 0xf0, 0x13, 0x3d, 0x7e,
	0x80, 0x1b, 0x73, 0xe4, 0x75, 0x8d, 0x76, 0x8d, 0x5d, 0x72, 0xe4, 0x1a, 0xd1, 0xd6, 0xeb, 0xf5,
	0xff, 0x81, 0x98, 0x86, 0xb4, 0x0b, 0x04, 0x65, 0x96, 0xae, 0xeb, 0x8f, 0xac, 0x04, 0xf5, 0xc1,
	0xcb, 0x78, 0xb9, 0x93, 0x3c, 0x36, 0xfb, 0x3a, 0xc1, 0x41, 0xb2, 0x09, 0x10, 0x53, 0xfa, 0x4c,
	0xb0, 0x0b, 0x64, 0x97, 0xee, 0x53, 0x34, 0x31, 0x12, 0x54, 0x82, 0xf5, 0xc1, 0x09, 0x55, 0xf4,
	0x76, 0x84, 0xfd, 0x05, 0x67, 0x75, 0xce, 0x7c, 0xe7, 0x21, 0xff, 0xc0, 0xd5, 0xe5, 0xce, 0xe7,
	0xd6, 0x52, 0x60, 0x22, 0xf0, 0x90, 0xab, 0xe5, 0xf8, 0xd1, 0x06, 0x72, 0xa3, 0xff, 0x86, 0xfe,
	0x06, 0x12, 0x22, 0xcf, 0x91, 0x9e, 0xfe, 0x69, 0xef, 0x74, 0xc0, 0x2c, 0x3a, 0x82, 0x46, 0x88,
	0x79, 0xc2, 0xf7, 0x1f, 0xd3, 0x43, 0xfb, 0x8f, 0x4d, 0x07, 0xe0, 0x86, 0x28, 0x33, 0xfa, 0x72,
	0x4f, 0xfa, 0x8c, 0x7b, 0x47, 0x8a, 0x59, 0x53, 0xef, 0xb6, 0x3a, 0xf4, 0xa8, 0x61, 0xce, 0x7e,
	0xf2, 0x1c, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x56, 0x10, 0xc3, 0x05, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UnitdClient is the client API for Unitd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnitdClient interface {
	Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (Unitd_StreamClient, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type unitdClient struct {
	cc *grpc.ClientConn
}

func NewUnitdClient(cc *grpc.ClientConn) UnitdClient {
	return &unitdClient{cc}
}

func (c *unitdClient) Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error) {
	out := new(ConnInfo)
	err := c.cc.Invoke(ctx, "/unitd.Unitd/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitdClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Unitd_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Unitd_serviceDesc.Streams[0], "/unitd.Unitd/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &unitdStreamClient{stream}
	return x, nil
}

type Unitd_StreamClient interface {
	Send(*ConnInfo) error
	Recv() (*ConnInfo, error)
	grpc.ClientStream
}

type unitdStreamClient struct {
	grpc.ClientStream
}

func (x *unitdStreamClient) Send(m *ConnInfo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *unitdStreamClient) Recv() (*ConnInfo, error) {
	m := new(ConnInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *unitdClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/unitd.Unitd/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnitdServer is the server API for Unitd service.
type UnitdServer interface {
	Start(context.Context, *ConnInfo) (*ConnInfo, error)
	Stream(Unitd_StreamServer) error
	Stop(context.Context, *Empty) (*Empty, error)
}

// UnimplementedUnitdServer can be embedded to have forward compatible implementations.
type UnimplementedUnitdServer struct {
}

func (*UnimplementedUnitdServer) Start(ctx context.Context, req *ConnInfo) (*ConnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedUnitdServer) Stream(srv Unitd_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedUnitdServer) Stop(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}

func RegisterUnitdServer(s *grpc.Server, srv UnitdServer) {
	s.RegisterService(&_Unitd_serviceDesc, srv)
}

func _Unitd_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitd.Unitd/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdServer).Start(ctx, req.(*ConnInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Unitd_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UnitdServer).Stream(&unitdStreamServer{stream})
}

type Unitd_StreamServer interface {
	Send(*ConnInfo) error
	Recv() (*ConnInfo, error)
	grpc.ServerStream
}

type unitdStreamServer struct {
	grpc.ServerStream
}

func (x *unitdStreamServer) Send(m *ConnInfo) error {
	return x.ServerStream.SendMsg(m)
}

func (x *unitdStreamServer) Recv() (*ConnInfo, error) {
	m := new(ConnInfo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Unitd_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitd.Unitd/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Unitd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "unitd.Unitd",
	HandlerType: (*UnitdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Unitd_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Unitd_Stop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Unitd_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "unitd.proto",
}
