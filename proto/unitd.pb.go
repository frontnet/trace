// Code generated by protoc-gen-go. DO NOT EDIT.
// source: unitd.proto

package unitd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_RESERVED    MessageType = 0
	MessageType_CONNECT     MessageType = 1
	MessageType_CONNACK     MessageType = 2
	MessageType_PUBLISH     MessageType = 3
	MessageType_PUBACK      MessageType = 4
	MessageType_PUBREC      MessageType = 5
	MessageType_PUBREL      MessageType = 6
	MessageType_PUBCOMP     MessageType = 7
	MessageType_SUBSCRIBE   MessageType = 8
	MessageType_SUBACK      MessageType = 9
	MessageType_UNSUBSCRIBE MessageType = 10
	MessageType_UNSUBACK    MessageType = 11
	MessageType_PINGREQ     MessageType = 12
	MessageType_PINGRESP    MessageType = 13
	MessageType_DISCONNECT  MessageType = 14
)

var MessageType_name = map[int32]string{
	0:  "RESERVED",
	1:  "CONNECT",
	2:  "CONNACK",
	3:  "PUBLISH",
	4:  "PUBACK",
	5:  "PUBREC",
	6:  "PUBREL",
	7:  "PUBCOMP",
	8:  "SUBSCRIBE",
	9:  "SUBACK",
	10: "UNSUBSCRIBE",
	11: "UNSUBACK",
	12: "PINGREQ",
	13: "PINGRESP",
	14: "DISCONNECT",
}

var MessageType_value = map[string]int32{
	"RESERVED":    0,
	"CONNECT":     1,
	"CONNACK":     2,
	"PUBLISH":     3,
	"PUBACK":      4,
	"PUBREC":      5,
	"PUBREL":      6,
	"PUBCOMP":     7,
	"SUBSCRIBE":   8,
	"SUBACK":      9,
	"UNSUBSCRIBE": 10,
	"UNSUBACK":    11,
	"PINGREQ":     12,
	"PINGRESP":    13,
	"DISCONNECT":  14,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Packet struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{1}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type ConnInfo struct {
	ClientId             []byte   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Network              string   `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnInfo) Reset()         { *m = ConnInfo{} }
func (m *ConnInfo) String() string { return proto.CompactTextString(m) }
func (*ConnInfo) ProtoMessage()    {}
func (*ConnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{2}
}

func (m *ConnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnInfo.Unmarshal(m, b)
}
func (m *ConnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnInfo.Marshal(b, m, deterministic)
}
func (m *ConnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnInfo.Merge(m, src)
}
func (m *ConnInfo) XXX_Size() int {
	return xxx_messageInfo_ConnInfo.Size(m)
}
func (m *ConnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnInfo proto.InternalMessageInfo

func (m *ConnInfo) GetClientId() []byte {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ConnInfo) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *ConnInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type InMsg struct {
	// Types that are valid to be assigned to Message:
	//	*InMsg_Conn
	//	*InMsg_Pub
	//	*InMsg_Sub
	Message              isInMsg_Message `protobuf_oneof:"Message"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *InMsg) Reset()         { *m = InMsg{} }
func (m *InMsg) String() string { return proto.CompactTextString(m) }
func (*InMsg) ProtoMessage()    {}
func (*InMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{3}
}

func (m *InMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InMsg.Unmarshal(m, b)
}
func (m *InMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InMsg.Marshal(b, m, deterministic)
}
func (m *InMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InMsg.Merge(m, src)
}
func (m *InMsg) XXX_Size() int {
	return xxx_messageInfo_InMsg.Size(m)
}
func (m *InMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_InMsg.DiscardUnknown(m)
}

var xxx_messageInfo_InMsg proto.InternalMessageInfo

type isInMsg_Message interface {
	isInMsg_Message()
}

type InMsg_Conn struct {
	Conn *Conn `protobuf:"bytes,1,opt,name=conn,proto3,oneof"`
}

type InMsg_Pub struct {
	Pub *Publish `protobuf:"bytes,2,opt,name=pub,proto3,oneof"`
}

type InMsg_Sub struct {
	Sub *Subscribe `protobuf:"bytes,3,opt,name=sub,proto3,oneof"`
}

func (*InMsg_Conn) isInMsg_Message() {}

func (*InMsg_Pub) isInMsg_Message() {}

func (*InMsg_Sub) isInMsg_Message() {}

func (m *InMsg) GetMessage() isInMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *InMsg) GetConn() *Conn {
	if x, ok := m.GetMessage().(*InMsg_Conn); ok {
		return x.Conn
	}
	return nil
}

func (m *InMsg) GetPub() *Publish {
	if x, ok := m.GetMessage().(*InMsg_Pub); ok {
		return x.Pub
	}
	return nil
}

func (m *InMsg) GetSub() *Subscribe {
	if x, ok := m.GetMessage().(*InMsg_Sub); ok {
		return x.Sub
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InMsg_Conn)(nil),
		(*InMsg_Pub)(nil),
		(*InMsg_Sub)(nil),
	}
}

type OutMsg struct {
	// Types that are valid to be assigned to Message:
	//	*OutMsg_Connack
	//	*OutMsg_Puback
	//	*OutMsg_Suback
	Message              isOutMsg_Message `protobuf_oneof:"Message"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OutMsg) Reset()         { *m = OutMsg{} }
func (m *OutMsg) String() string { return proto.CompactTextString(m) }
func (*OutMsg) ProtoMessage()    {}
func (*OutMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{4}
}

func (m *OutMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutMsg.Unmarshal(m, b)
}
func (m *OutMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutMsg.Marshal(b, m, deterministic)
}
func (m *OutMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutMsg.Merge(m, src)
}
func (m *OutMsg) XXX_Size() int {
	return xxx_messageInfo_OutMsg.Size(m)
}
func (m *OutMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_OutMsg.DiscardUnknown(m)
}

var xxx_messageInfo_OutMsg proto.InternalMessageInfo

type isOutMsg_Message interface {
	isOutMsg_Message()
}

type OutMsg_Connack struct {
	Connack *Connack `protobuf:"bytes,1,opt,name=connack,proto3,oneof"`
}

type OutMsg_Puback struct {
	Puback *Puback `protobuf:"bytes,2,opt,name=puback,proto3,oneof"`
}

type OutMsg_Suback struct {
	Suback *Suback `protobuf:"bytes,3,opt,name=suback,proto3,oneof"`
}

func (*OutMsg_Connack) isOutMsg_Message() {}

func (*OutMsg_Puback) isOutMsg_Message() {}

func (*OutMsg_Suback) isOutMsg_Message() {}

func (m *OutMsg) GetMessage() isOutMsg_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *OutMsg) GetConnack() *Connack {
	if x, ok := m.GetMessage().(*OutMsg_Connack); ok {
		return x.Connack
	}
	return nil
}

func (m *OutMsg) GetPuback() *Puback {
	if x, ok := m.GetMessage().(*OutMsg_Puback); ok {
		return x.Puback
	}
	return nil
}

func (m *OutMsg) GetSuback() *Suback {
	if x, ok := m.GetMessage().(*OutMsg_Suback); ok {
		return x.Suback
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OutMsg) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OutMsg_Connack)(nil),
		(*OutMsg_Puback)(nil),
		(*OutMsg_Suback)(nil),
	}
}

type FixedHeader struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=MessageType,proto3,enum=unitd.MessageType" json:"MessageType,omitempty"`
	Dup                  bool        `protobuf:"varint,2,opt,name=Dup,proto3" json:"Dup,omitempty"`
	Qos                  uint32      `protobuf:"varint,3,opt,name=Qos,proto3" json:"Qos,omitempty"`
	Retain               bool        `protobuf:"varint,4,opt,name=Retain,proto3" json:"Retain,omitempty"`
	RemainingLength      uint32      `protobuf:"varint,5,opt,name=RemainingLength,proto3" json:"RemainingLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FixedHeader) Reset()         { *m = FixedHeader{} }
func (m *FixedHeader) String() string { return proto.CompactTextString(m) }
func (*FixedHeader) ProtoMessage()    {}
func (*FixedHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{5}
}

func (m *FixedHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FixedHeader.Unmarshal(m, b)
}
func (m *FixedHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FixedHeader.Marshal(b, m, deterministic)
}
func (m *FixedHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FixedHeader.Merge(m, src)
}
func (m *FixedHeader) XXX_Size() int {
	return xxx_messageInfo_FixedHeader.Size(m)
}
func (m *FixedHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_FixedHeader.DiscardUnknown(m)
}

var xxx_messageInfo_FixedHeader proto.InternalMessageInfo

func (m *FixedHeader) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_RESERVED
}

func (m *FixedHeader) GetDup() bool {
	if m != nil {
		return m.Dup
	}
	return false
}

func (m *FixedHeader) GetQos() uint32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

func (m *FixedHeader) GetRetain() bool {
	if m != nil {
		return m.Retain
	}
	return false
}

func (m *FixedHeader) GetRemainingLength() uint32 {
	if m != nil {
		return m.RemainingLength
	}
	return 0
}

// Connect represents a connect packet.
type Conn struct {
	ProtoName            []byte   `protobuf:"bytes,1,opt,name=ProtoName,proto3" json:"ProtoName,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	InsecureFlag         bool     `protobuf:"varint,3,opt,name=InsecureFlag,proto3" json:"InsecureFlag,omitempty"`
	UsernameFlag         bool     `protobuf:"varint,4,opt,name=UsernameFlag,proto3" json:"UsernameFlag,omitempty"`
	PasswordFlag         bool     `protobuf:"varint,5,opt,name=PasswordFlag,proto3" json:"PasswordFlag,omitempty"`
	CleanSessFlag        bool     `protobuf:"varint,9,opt,name=CleanSessFlag,proto3" json:"CleanSessFlag,omitempty"`
	KeepAlive            uint32   `protobuf:"varint,10,opt,name=KeepAlive,proto3" json:"KeepAlive,omitempty"`
	ClientID             []byte   `protobuf:"bytes,11,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Username             []byte   `protobuf:"bytes,14,opt,name=Username,proto3" json:"Username,omitempty"`
	Password             []byte   `protobuf:"bytes,15,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Conn) Reset()         { *m = Conn{} }
func (m *Conn) String() string { return proto.CompactTextString(m) }
func (*Conn) ProtoMessage()    {}
func (*Conn) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{6}
}

func (m *Conn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Conn.Unmarshal(m, b)
}
func (m *Conn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Conn.Marshal(b, m, deterministic)
}
func (m *Conn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Conn.Merge(m, src)
}
func (m *Conn) XXX_Size() int {
	return xxx_messageInfo_Conn.Size(m)
}
func (m *Conn) XXX_DiscardUnknown() {
	xxx_messageInfo_Conn.DiscardUnknown(m)
}

var xxx_messageInfo_Conn proto.InternalMessageInfo

func (m *Conn) GetProtoName() []byte {
	if m != nil {
		return m.ProtoName
	}
	return nil
}

func (m *Conn) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Conn) GetInsecureFlag() bool {
	if m != nil {
		return m.InsecureFlag
	}
	return false
}

func (m *Conn) GetUsernameFlag() bool {
	if m != nil {
		return m.UsernameFlag
	}
	return false
}

func (m *Conn) GetPasswordFlag() bool {
	if m != nil {
		return m.PasswordFlag
	}
	return false
}

func (m *Conn) GetCleanSessFlag() bool {
	if m != nil {
		return m.CleanSessFlag
	}
	return false
}

func (m *Conn) GetKeepAlive() uint32 {
	if m != nil {
		return m.KeepAlive
	}
	return 0
}

func (m *Conn) GetClientID() []byte {
	if m != nil {
		return m.ClientID
	}
	return nil
}

func (m *Conn) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *Conn) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// Connack represents a connack packet.
// 0x00 connection accepted
// 0x01 refused: unacceptable proto version
// 0x02 refused: identifier rejected
// 0x03 refused server unavailiable
// 0x04 bad user or password
// 0x05 not authorized
type Connack struct {
	ReturnCode           uint32   `protobuf:"varint,1,opt,name=ReturnCode,proto3" json:"ReturnCode,omitempty"`
	ConnID               uint32   `protobuf:"varint,2,opt,name=ConnID,proto3" json:"ConnID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connack) Reset()         { *m = Connack{} }
func (m *Connack) String() string { return proto.CompactTextString(m) }
func (*Connack) ProtoMessage()    {}
func (*Connack) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{7}
}

func (m *Connack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connack.Unmarshal(m, b)
}
func (m *Connack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connack.Marshal(b, m, deterministic)
}
func (m *Connack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connack.Merge(m, src)
}
func (m *Connack) XXX_Size() int {
	return xxx_messageInfo_Connack.Size(m)
}
func (m *Connack) XXX_DiscardUnknown() {
	xxx_messageInfo_Connack.DiscardUnknown(m)
}

var xxx_messageInfo_Connack proto.InternalMessageInfo

func (m *Connack) GetReturnCode() uint32 {
	if m != nil {
		return m.ReturnCode
	}
	return 0
}

func (m *Connack) GetConnID() uint32 {
	if m != nil {
		return m.ConnID
	}
	return 0
}

//Pingreq is a keepalive
type Pingreq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pingreq) Reset()         { *m = Pingreq{} }
func (m *Pingreq) String() string { return proto.CompactTextString(m) }
func (*Pingreq) ProtoMessage()    {}
func (*Pingreq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{8}
}

func (m *Pingreq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pingreq.Unmarshal(m, b)
}
func (m *Pingreq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pingreq.Marshal(b, m, deterministic)
}
func (m *Pingreq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pingreq.Merge(m, src)
}
func (m *Pingreq) XXX_Size() int {
	return xxx_messageInfo_Pingreq.Size(m)
}
func (m *Pingreq) XXX_DiscardUnknown() {
	xxx_messageInfo_Pingreq.DiscardUnknown(m)
}

var xxx_messageInfo_Pingreq proto.InternalMessageInfo

//Pingresp is for saying "hey, the server is alive"
type Pingresp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pingresp) Reset()         { *m = Pingresp{} }
func (m *Pingresp) String() string { return proto.CompactTextString(m) }
func (*Pingresp) ProtoMessage()    {}
func (*Pingresp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{9}
}

func (m *Pingresp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pingresp.Unmarshal(m, b)
}
func (m *Pingresp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pingresp.Marshal(b, m, deterministic)
}
func (m *Pingresp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pingresp.Merge(m, src)
}
func (m *Pingresp) XXX_Size() int {
	return xxx_messageInfo_Pingresp.Size(m)
}
func (m *Pingresp) XXX_DiscardUnknown() {
	xxx_messageInfo_Pingresp.DiscardUnknown(m)
}

var xxx_messageInfo_Pingresp proto.InternalMessageInfo

//Disconnect is to signal you want to cease communications with the server
type Disconnect struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disconnect) Reset()         { *m = Disconnect{} }
func (m *Disconnect) String() string { return proto.CompactTextString(m) }
func (*Disconnect) ProtoMessage()    {}
func (*Disconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{10}
}

func (m *Disconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disconnect.Unmarshal(m, b)
}
func (m *Disconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disconnect.Marshal(b, m, deterministic)
}
func (m *Disconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disconnect.Merge(m, src)
}
func (m *Disconnect) XXX_Size() int {
	return xxx_messageInfo_Disconnect.Size(m)
}
func (m *Disconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_Disconnect.DiscardUnknown(m)
}

var xxx_messageInfo_Disconnect proto.InternalMessageInfo

func (m *Disconnect) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

// Publish represents a publish packet.
type Publish struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Topic                []byte   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Qos                  uint32   `protobuf:"varint,4,opt,name=Qos,proto3" json:"Qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Publish) Reset()         { *m = Publish{} }
func (m *Publish) String() string { return proto.CompactTextString(m) }
func (*Publish) ProtoMessage()    {}
func (*Publish) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{11}
}

func (m *Publish) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Publish.Unmarshal(m, b)
}
func (m *Publish) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Publish.Marshal(b, m, deterministic)
}
func (m *Publish) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Publish.Merge(m, src)
}
func (m *Publish) XXX_Size() int {
	return xxx_messageInfo_Publish.Size(m)
}
func (m *Publish) XXX_DiscardUnknown() {
	xxx_messageInfo_Publish.DiscardUnknown(m)
}

var xxx_messageInfo_Publish proto.InternalMessageInfo

func (m *Publish) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Publish) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Publish) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Publish) GetQos() uint32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

//Puback is sent for QOS level one to verify the receipt of a publish
//Qot the spec: "A PUBACK Packet is sent by a server in response to a PUBLISH Packet from a publishing client, and by a subscriber in response to a PUBLISH Packet from the server."
type Puback struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Puback) Reset()         { *m = Puback{} }
func (m *Puback) String() string { return proto.CompactTextString(m) }
func (*Puback) ProtoMessage()    {}
func (*Puback) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{12}
}

func (m *Puback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Puback.Unmarshal(m, b)
}
func (m *Puback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Puback.Marshal(b, m, deterministic)
}
func (m *Puback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Puback.Merge(m, src)
}
func (m *Puback) XXX_Size() int {
	return xxx_messageInfo_Puback.Size(m)
}
func (m *Puback) XXX_DiscardUnknown() {
	xxx_messageInfo_Puback.DiscardUnknown(m)
}

var xxx_messageInfo_Puback proto.InternalMessageInfo

func (m *Puback) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

//Pubrec is for verifying the receipt of a publish
//Qoth the spec:"It is the second Packet of the QoS level 2 protocol flow. A PUBREC Packet is sent by the server in response to a PUBLISH Packet from a publishing client, or by a subscriber in response to a PUBLISH Packet from the server."
type Pubrec struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Qos                  uint32   `protobuf:"varint,2,opt,name=Qos,proto3" json:"Qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pubrec) Reset()         { *m = Pubrec{} }
func (m *Pubrec) String() string { return proto.CompactTextString(m) }
func (*Pubrec) ProtoMessage()    {}
func (*Pubrec) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{13}
}

func (m *Pubrec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pubrec.Unmarshal(m, b)
}
func (m *Pubrec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pubrec.Marshal(b, m, deterministic)
}
func (m *Pubrec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pubrec.Merge(m, src)
}
func (m *Pubrec) XXX_Size() int {
	return xxx_messageInfo_Pubrec.Size(m)
}
func (m *Pubrec) XXX_DiscardUnknown() {
	xxx_messageInfo_Pubrec.DiscardUnknown(m)
}

var xxx_messageInfo_Pubrec proto.InternalMessageInfo

func (m *Pubrec) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Pubrec) GetQos() uint32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

//Pubrel is a response to pubrec from either the client or server.
type Pubrel struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Qos                  uint32   `protobuf:"varint,2,opt,name=Qos,proto3" json:"Qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pubrel) Reset()         { *m = Pubrel{} }
func (m *Pubrel) String() string { return proto.CompactTextString(m) }
func (*Pubrel) ProtoMessage()    {}
func (*Pubrel) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{14}
}

func (m *Pubrel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pubrel.Unmarshal(m, b)
}
func (m *Pubrel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pubrel.Marshal(b, m, deterministic)
}
func (m *Pubrel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pubrel.Merge(m, src)
}
func (m *Pubrel) XXX_Size() int {
	return xxx_messageInfo_Pubrel.Size(m)
}
func (m *Pubrel) XXX_DiscardUnknown() {
	xxx_messageInfo_Pubrel.DiscardUnknown(m)
}

var xxx_messageInfo_Pubrel proto.InternalMessageInfo

func (m *Pubrel) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Pubrel) GetQos() uint32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

//Pubcomp is for saying is in response to a pubrel sent by the publisher
//the final member of the QOS2 flow. both sides have said "hey, we did it!"
type Pubcomp struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pubcomp) Reset()         { *m = Pubcomp{} }
func (m *Pubcomp) String() string { return proto.CompactTextString(m) }
func (*Pubcomp) ProtoMessage()    {}
func (*Pubcomp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{15}
}

func (m *Pubcomp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pubcomp.Unmarshal(m, b)
}
func (m *Pubcomp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pubcomp.Marshal(b, m, deterministic)
}
func (m *Pubcomp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pubcomp.Merge(m, src)
}
func (m *Pubcomp) XXX_Size() int {
	return xxx_messageInfo_Pubcomp.Size(m)
}
func (m *Pubcomp) XXX_DiscardUnknown() {
	xxx_messageInfo_Pubcomp.DiscardUnknown(m)
}

var xxx_messageInfo_Pubcomp proto.InternalMessageInfo

func (m *Pubcomp) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

//Subscriber is pairing the Qos and topic together
//for the QOS' pairs in unsubscribe and subscribe
type Subscriber struct {
	Topic                []byte   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Qos                  uint32   `protobuf:"varint,3,opt,name=Qos,proto3" json:"Qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subscriber) Reset()         { *m = Subscriber{} }
func (m *Subscriber) String() string { return proto.CompactTextString(m) }
func (*Subscriber) ProtoMessage()    {}
func (*Subscriber) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{16}
}

func (m *Subscriber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscriber.Unmarshal(m, b)
}
func (m *Subscriber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscriber.Marshal(b, m, deterministic)
}
func (m *Subscriber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscriber.Merge(m, src)
}
func (m *Subscriber) XXX_Size() int {
	return xxx_messageInfo_Subscriber.Size(m)
}
func (m *Subscriber) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscriber.DiscardUnknown(m)
}

var xxx_messageInfo_Subscriber proto.InternalMessageInfo

func (m *Subscriber) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Subscriber) GetQos() uint32 {
	if m != nil {
		return m.Qos
	}
	return 0
}

//Subscribe tells the server which topics the client would like to subscribe to
type Subscribe struct {
	MessageID            uint32        `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Subscribers          []*Subscriber `protobuf:"bytes,2,rep,name=Subscribers,proto3" json:"Subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Subscribe) Reset()         { *m = Subscribe{} }
func (m *Subscribe) String() string { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()    {}
func (*Subscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{17}
}

func (m *Subscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscribe.Unmarshal(m, b)
}
func (m *Subscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscribe.Marshal(b, m, deterministic)
}
func (m *Subscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscribe.Merge(m, src)
}
func (m *Subscribe) XXX_Size() int {
	return xxx_messageInfo_Subscribe.Size(m)
}
func (m *Subscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Subscribe proto.InternalMessageInfo

func (m *Subscribe) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Subscribe) GetSubscribers() []*Subscriber {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

//Suback is to say "hey, you got it buddy. I will send you messages that fit this pattern"
type Suback struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Qos                  []uint32 `protobuf:"varint,2,rep,packed,name=Qos,proto3" json:"Qos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Suback) Reset()         { *m = Suback{} }
func (m *Suback) String() string { return proto.CompactTextString(m) }
func (*Suback) ProtoMessage()    {}
func (*Suback) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{18}
}

func (m *Suback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suback.Unmarshal(m, b)
}
func (m *Suback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suback.Marshal(b, m, deterministic)
}
func (m *Suback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suback.Merge(m, src)
}
func (m *Suback) XXX_Size() int {
	return xxx_messageInfo_Suback.Size(m)
}
func (m *Suback) XXX_DiscardUnknown() {
	xxx_messageInfo_Suback.DiscardUnknown(m)
}

var xxx_messageInfo_Suback proto.InternalMessageInfo

func (m *Suback) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Suback) GetQos() []uint32 {
	if m != nil {
		return m.Qos
	}
	return nil
}

//Unsubscribe is the Packet to send if you don't want to subscribe to a topic anymore
type Unsubscribe struct {
	MessageID            uint32        `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	Subscribers          []*Subscriber `protobuf:"bytes,2,rep,name=Subscribers,proto3" json:"Subscribers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Unsubscribe) Reset()         { *m = Unsubscribe{} }
func (m *Unsubscribe) String() string { return proto.CompactTextString(m) }
func (*Unsubscribe) ProtoMessage()    {}
func (*Unsubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{19}
}

func (m *Unsubscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unsubscribe.Unmarshal(m, b)
}
func (m *Unsubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unsubscribe.Marshal(b, m, deterministic)
}
func (m *Unsubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsubscribe.Merge(m, src)
}
func (m *Unsubscribe) XXX_Size() int {
	return xxx_messageInfo_Unsubscribe.Size(m)
}
func (m *Unsubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_Unsubscribe proto.InternalMessageInfo

func (m *Unsubscribe) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func (m *Unsubscribe) GetSubscribers() []*Subscriber {
	if m != nil {
		return m.Subscribers
	}
	return nil
}

//Unsuback is to unsubscribe as suback is to subscribe
type Unsuback struct {
	MessageID            uint32   `protobuf:"varint,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unsuback) Reset()         { *m = Unsuback{} }
func (m *Unsuback) String() string { return proto.CompactTextString(m) }
func (*Unsuback) ProtoMessage()    {}
func (*Unsuback) Descriptor() ([]byte, []int) {
	return fileDescriptor_2581e9e1a4f3b0d3, []int{20}
}

func (m *Unsuback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unsuback.Unmarshal(m, b)
}
func (m *Unsuback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unsuback.Marshal(b, m, deterministic)
}
func (m *Unsuback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unsuback.Merge(m, src)
}
func (m *Unsuback) XXX_Size() int {
	return xxx_messageInfo_Unsuback.Size(m)
}
func (m *Unsuback) XXX_DiscardUnknown() {
	xxx_messageInfo_Unsuback.DiscardUnknown(m)
}

var xxx_messageInfo_Unsuback proto.InternalMessageInfo

func (m *Unsuback) GetMessageID() uint32 {
	if m != nil {
		return m.MessageID
	}
	return 0
}

func init() {
	proto.RegisterEnum("unitd.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*Empty)(nil), "unitd.Empty")
	proto.RegisterType((*Packet)(nil), "unitd.Packet")
	proto.RegisterType((*ConnInfo)(nil), "unitd.ConnInfo")
	proto.RegisterType((*InMsg)(nil), "unitd.InMsg")
	proto.RegisterType((*OutMsg)(nil), "unitd.OutMsg")
	proto.RegisterType((*FixedHeader)(nil), "unitd.FixedHeader")
	proto.RegisterType((*Conn)(nil), "unitd.Conn")
	proto.RegisterType((*Connack)(nil), "unitd.Connack")
	proto.RegisterType((*Pingreq)(nil), "unitd.Pingreq")
	proto.RegisterType((*Pingresp)(nil), "unitd.Pingresp")
	proto.RegisterType((*Disconnect)(nil), "unitd.Disconnect")
	proto.RegisterType((*Publish)(nil), "unitd.Publish")
	proto.RegisterType((*Puback)(nil), "unitd.Puback")
	proto.RegisterType((*Pubrec)(nil), "unitd.Pubrec")
	proto.RegisterType((*Pubrel)(nil), "unitd.Pubrel")
	proto.RegisterType((*Pubcomp)(nil), "unitd.Pubcomp")
	proto.RegisterType((*Subscriber)(nil), "unitd.Subscriber")
	proto.RegisterType((*Subscribe)(nil), "unitd.Subscribe")
	proto.RegisterType((*Suback)(nil), "unitd.Suback")
	proto.RegisterType((*Unsubscribe)(nil), "unitd.Unsubscribe")
	proto.RegisterType((*Unsuback)(nil), "unitd.Unsuback")
}

func init() { proto.RegisterFile("unitd.proto", fileDescriptor_2581e9e1a4f3b0d3) }

var fileDescriptor_2581e9e1a4f3b0d3 = []byte{
	// 911 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcb, 0x8e, 0xe3, 0x44,
	0x14, 0x8d, 0x3b, 0x0f, 0xc7, 0xd7, 0x49, 0xda, 0x94, 0x10, 0xb2, 0x9a, 0x11, 0x1a, 0xac, 0x16,
	0x13, 0x35, 0xd2, 0x08, 0x65, 0x66, 0xc1, 0xb6, 0xe3, 0x64, 0x88, 0x35, 0xdd, 0x69, 0x4f, 0xb9,
	0x33, 0x0b, 0x90, 0x80, 0x8a, 0x5d, 0x64, 0xac, 0x4e, 0xca, 0xc6, 0x65, 0xd3, 0xf4, 0x8a, 0x1d,
	0x7b, 0x3e, 0x83, 0xdf, 0xe0, 0x2b, 0xf8, 0x1c, 0x54, 0x0f, 0xe7, 0xd1, 0x08, 0x02, 0x8b, 0xd9,
	0xd5, 0xb9, 0xe7, 0x54, 0xdd, 0x53, 0xb7, 0x6e, 0xb9, 0x0c, 0x76, 0xc5, 0xd2, 0x32, 0x79, 0x9e,
	0x17, 0x59, 0x99, 0xa1, 0xb6, 0x04, 0x9e, 0x09, 0xed, 0xe9, 0x26, 0x2f, 0x1f, 0xbc, 0x27, 0xd0,
	0x09, 0x49, 0x7c, 0x47, 0x4b, 0x84, 0xa0, 0x95, 0x90, 0x92, 0xb8, 0xc6, 0x53, 0x63, 0xd8, 0xc3,
	0x72, 0xec, 0x7d, 0x03, 0x5d, 0x3f, 0x63, 0x2c, 0x60, 0x3f, 0x64, 0xe8, 0x63, 0xb0, 0xe2, 0x75,
	0x4a, 0x59, 0xf9, 0x5d, 0x9a, 0x68, 0x51, 0x57, 0x05, 0x82, 0x04, 0xb9, 0x60, 0x32, 0x5a, 0xde,
	0x67, 0xc5, 0x9d, 0x7b, 0xf2, 0xd4, 0x18, 0x5a, 0xb8, 0x86, 0x82, 0x21, 0x49, 0x52, 0x50, 0xce,
	0xdd, 0xa6, 0x62, 0x34, 0xf4, 0x7e, 0x81, 0x76, 0xc0, 0xae, 0xf9, 0x0a, 0x7d, 0x0a, 0xad, 0x38,
	0x63, 0x4c, 0x2e, 0x6a, 0x8f, 0xec, 0xe7, 0xca, 0xaf, 0x48, 0x3c, 0x6b, 0x60, 0x49, 0x21, 0x0f,
	0x9a, 0x79, 0xb5, 0x94, 0x6b, 0xdb, 0xa3, 0x81, 0x56, 0x84, 0xd5, 0x72, 0x9d, 0xf2, 0x77, 0xb3,
	0x06, 0x16, 0x24, 0x3a, 0x87, 0x26, 0xaf, 0x96, 0x32, 0x8b, 0x3d, 0x72, 0xb4, 0x26, 0xaa, 0x96,
	0x3c, 0x2e, 0xd2, 0x25, 0x15, 0x2a, 0x5e, 0x2d, 0xc7, 0x16, 0x98, 0xd7, 0x94, 0x73, 0xb2, 0xa2,
	0xde, 0x6f, 0x06, 0x74, 0x6e, 0xaa, 0x52, 0x58, 0xb8, 0x00, 0x53, 0xe4, 0x21, 0xf1, 0x9d, 0x76,
	0x31, 0xd8, 0x73, 0x41, 0xe2, 0xbb, 0x59, 0x03, 0xd7, 0x02, 0xf4, 0x0c, 0x3a, 0x79, 0xb5, 0x14,
	0x52, 0x65, 0xa7, 0xbf, 0xb3, 0xa3, 0x94, 0x9a, 0x16, 0x42, 0xae, 0x84, 0xcd, 0x03, 0x61, 0xb4,
	0x15, 0x2a, 0x7a, 0xdf, 0xd3, 0xef, 0x06, 0xd8, 0xaf, 0xd2, 0x9f, 0x69, 0x32, 0xa3, 0x24, 0xa1,
	0x05, 0x7a, 0x09, 0xb6, 0xa6, 0x6e, 0x1f, 0x72, 0x2a, 0xcd, 0x0d, 0x46, 0x48, 0x2f, 0xb4, 0xc7,
	0xe0, 0x7d, 0x19, 0x72, 0xa0, 0x39, 0xa9, 0x72, 0xe9, 0xaf, 0x8b, 0xc5, 0x50, 0x44, 0xde, 0x64,
	0xea, 0x08, 0xfa, 0x58, 0x0c, 0xd1, 0x47, 0xd0, 0xc1, 0xb4, 0x24, 0x29, 0x73, 0x5b, 0x52, 0xa6,
	0x11, 0x1a, 0xc2, 0x29, 0xa6, 0x1b, 0x92, 0xb2, 0x94, 0xad, 0xae, 0x28, 0x5b, 0x95, 0xef, 0xdc,
	0xb6, 0x9c, 0xf5, 0x38, 0xec, 0xfd, 0x71, 0x02, 0x2d, 0x51, 0x1f, 0xf4, 0x04, 0xac, 0x50, 0x74,
	0xd7, 0x9c, 0x6c, 0xa8, 0x6e, 0x8d, 0x5d, 0x40, 0x74, 0xc0, 0x5b, 0x5a, 0xf0, 0x34, 0x63, 0xd2,
	0x50, 0x1f, 0xd7, 0x10, 0x79, 0xd0, 0x0b, 0x18, 0xa7, 0x71, 0x55, 0xd0, 0x57, 0x6b, 0xb2, 0x92,
	0xee, 0xba, 0xf8, 0x20, 0x26, 0x34, 0x0b, 0x4e, 0x0b, 0x46, 0x36, 0x4a, 0xa3, 0xcc, 0x1e, 0xc4,
	0x84, 0x26, 0x24, 0x9c, 0xdf, 0x67, 0x45, 0x22, 0x35, 0x6d, 0xa5, 0xd9, 0x8f, 0xa1, 0x73, 0xe8,
	0xfb, 0x6b, 0x4a, 0x58, 0x44, 0x39, 0x97, 0x22, 0x4b, 0x8a, 0x0e, 0x83, 0x62, 0x27, 0xaf, 0x29,
	0xcd, 0x2f, 0xd7, 0xe9, 0x4f, 0xd4, 0x05, 0xe9, 0x76, 0x17, 0x40, 0x67, 0xd0, 0xf5, 0x55, 0xc7,
	0x4f, 0x5c, 0x5b, 0xdd, 0x80, 0x1a, 0x0b, 0xae, 0xf6, 0xe4, 0x0e, 0x14, 0x57, 0x63, 0xc1, 0xd5,
	0x5e, 0xdc, 0x53, 0xc5, 0xd5, 0xd8, 0xbb, 0x04, 0x53, 0xf7, 0x18, 0xfa, 0x04, 0x00, 0xd3, 0xb2,
	0x2a, 0x98, 0x9f, 0x25, 0xaa, 0x8e, 0x7d, 0xbc, 0x17, 0x11, 0x27, 0x26, 0x6f, 0xe3, 0x44, 0xd7,
	0x51, 0x23, 0xcf, 0x02, 0x33, 0x4c, 0xd9, 0xaa, 0xa0, 0x3f, 0x7a, 0x00, 0x5d, 0x35, 0xe4, 0xb9,
	0x77, 0x01, 0x30, 0x49, 0xb9, 0xe8, 0x5a, 0x1a, 0x97, 0x62, 0x67, 0xba, 0x43, 0x82, 0x89, 0x5e,
	0x7b, 0x17, 0xf0, 0x52, 0x30, 0xf5, 0x6d, 0xfa, 0x77, 0x21, 0xfa, 0x10, 0xda, 0xb7, 0x59, 0x9e,
	0xc6, 0xd2, 0x42, 0x0f, 0x2b, 0x20, 0x8e, 0x38, 0x24, 0x0f, 0xeb, 0x8c, 0x24, 0xf2, 0x0c, 0x7b,
	0xb8, 0x86, 0x75, 0xdf, 0xb5, 0xb6, 0x7d, 0xe7, 0x7d, 0x06, 0x1d, 0x75, 0x53, 0x8e, 0x58, 0xfa,
	0x52, 0xea, 0x0a, 0x1a, 0x1f, 0x71, 0xa4, 0x33, 0x9c, 0xec, 0x32, 0xd4, 0x33, 0xd7, 0xff, 0x7b,
	0xe6, 0x33, 0x59, 0x86, 0x38, 0xdb, 0xe4, 0x47, 0xcc, 0xbd, 0x04, 0xd8, 0x7e, 0x59, 0x8a, 0x7f,
	0x28, 0xca, 0xdf, 0xae, 0x9c, 0xf7, 0x2d, 0x58, 0xdb, 0x59, 0x47, 0xbc, 0xbd, 0x00, 0x7b, 0x97,
	0x40, 0x78, 0x6c, 0x0e, 0xed, 0xd1, 0x07, 0x8f, 0x3f, 0x6a, 0x05, 0xde, 0x57, 0x89, 0x8d, 0x47,
	0xff, 0xa1, 0xb4, 0xbb, 0x8d, 0x37, 0x6b, 0x67, 0xdf, 0x83, 0xbd, 0x60, 0xfc, 0x7d, 0x7a, 0x1b,
	0x42, 0x57, 0x66, 0x38, 0xea, 0xee, 0xe2, 0x4f, 0xe3, 0xe0, 0x9b, 0x87, 0x7a, 0xd0, 0xc5, 0xd3,
	0x68, 0x8a, 0xdf, 0x4e, 0x27, 0x4e, 0x03, 0xd9, 0x60, 0xfa, 0x37, 0xf3, 0xf9, 0xd4, 0xbf, 0x75,
	0x8c, 0x1a, 0x5c, 0xfa, 0xaf, 0x9d, 0x13, 0x01, 0xc2, 0xc5, 0xf8, 0x2a, 0x88, 0x66, 0x4e, 0x13,
	0x01, 0x74, 0xc2, 0xc5, 0x58, 0x10, 0x2d, 0x3d, 0xc6, 0x53, 0xdf, 0x69, 0x6f, 0xc7, 0x57, 0x4e,
	0x47, 0x4f, 0xf0, 0x6f, 0xae, 0x43, 0xc7, 0x44, 0x7d, 0xb0, 0xa2, 0xc5, 0x38, 0xf2, 0x71, 0x30,
	0x9e, 0x3a, 0x5d, 0xa1, 0x8b, 0xd4, 0x7c, 0x0b, 0x9d, 0x82, 0xbd, 0x98, 0xef, 0x48, 0x10, 0x8e,
	0x64, 0x40, 0xd0, 0xb6, 0x5c, 0x26, 0x98, 0x7f, 0x85, 0xa7, 0x6f, 0x9c, 0x9e, 0xa0, 0x14, 0x88,
	0x42, 0xa7, 0x8f, 0x06, 0x00, 0x93, 0x20, 0xaa, 0xfd, 0x0e, 0x46, 0xbf, 0x1a, 0xd0, 0x5e, 0x88,
	0x32, 0xa1, 0xcf, 0xa1, 0x1d, 0x95, 0xa4, 0x28, 0xd1, 0xe9, 0xde, 0x43, 0x23, 0xde, 0xd9, 0xb3,
	0xc7, 0x01, 0xaf, 0x81, 0x2e, 0xa0, 0x13, 0x95, 0x05, 0x25, 0x1b, 0xb4, 0x7d, 0x6b, 0xe4, 0x9b,
	0x7d, 0x76, 0x08, 0x87, 0xc6, 0x17, 0x06, 0x3a, 0x87, 0x56, 0x54, 0x66, 0x39, 0xea, 0x69, 0x4a,
	0x3e, 0xf3, 0x67, 0x07, 0xc8, 0x6b, 0x8c, 0xcd, 0xaf, 0xd5, 0x8f, 0xc0, 0xb2, 0x23, 0x7f, 0x0b,
	0x5e, 0xfc, 0x15, 0x00, 0x00, 0xff, 0xff, 0x68, 0xf7, 0xa0, 0x1b, 0x25, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UnitdClient is the client API for Unitd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnitdClient interface {
	Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error)
	Stream(ctx context.Context, opts ...grpc.CallOption) (Unitd_StreamClient, error)
	Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type unitdClient struct {
	cc *grpc.ClientConn
}

func NewUnitdClient(cc *grpc.ClientConn) UnitdClient {
	return &unitdClient{cc}
}

func (c *unitdClient) Start(ctx context.Context, in *ConnInfo, opts ...grpc.CallOption) (*ConnInfo, error) {
	out := new(ConnInfo)
	err := c.cc.Invoke(ctx, "/unitd.Unitd/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unitdClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Unitd_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Unitd_serviceDesc.Streams[0], "/unitd.Unitd/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &unitdStreamClient{stream}
	return x, nil
}

type Unitd_StreamClient interface {
	Send(*Packet) error
	Recv() (*Packet, error)
	grpc.ClientStream
}

type unitdStreamClient struct {
	grpc.ClientStream
}

func (x *unitdStreamClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *unitdStreamClient) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *unitdClient) Stop(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/unitd.Unitd/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnitdServer is the server API for Unitd service.
type UnitdServer interface {
	Start(context.Context, *ConnInfo) (*ConnInfo, error)
	Stream(Unitd_StreamServer) error
	Stop(context.Context, *Empty) (*Empty, error)
}

// UnimplementedUnitdServer can be embedded to have forward compatible implementations.
type UnimplementedUnitdServer struct {
}

func (*UnimplementedUnitdServer) Start(ctx context.Context, req *ConnInfo) (*ConnInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedUnitdServer) Stream(srv Unitd_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedUnitdServer) Stop(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}

func RegisterUnitdServer(s *grpc.Server, srv UnitdServer) {
	s.RegisterService(&_Unitd_serviceDesc, srv)
}

func _Unitd_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitd.Unitd/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdServer).Start(ctx, req.(*ConnInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Unitd_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UnitdServer).Stream(&unitdStreamServer{stream})
}

type Unitd_StreamServer interface {
	Send(*Packet) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type unitdStreamServer struct {
	grpc.ServerStream
}

func (x *unitdStreamServer) Send(m *Packet) error {
	return x.ServerStream.SendMsg(m)
}

func (x *unitdStreamServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Unitd_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnitdServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/unitd.Unitd/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnitdServer).Stop(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Unitd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "unitd.Unitd",
	HandlerType: (*UnitdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Unitd_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Unitd_Stop_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Unitd_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "unitd.proto",
}
